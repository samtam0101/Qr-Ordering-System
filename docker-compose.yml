services:
  admin-app:
    image: ayubov012/qr-admin:latest
    build:
      context: .
      dockerfile: AdminApp/Dockerfile
    container_name: qr-admin
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
    ports:
      - "5101:8080"
    volumes:
      - /var/www/qr-ordering/uploads:/app/wwwroot/uploads
    depends_on:
      - db
    networks: [qr-suite]

  guest-app:
    image: ayubov012/qr-guest:latest
    build:
      context: .
      dockerfile: GuestApp/Dockerfile
    container_name: qr-guest
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - AdminPublicBase=http://95.217.129.76:5101
    ports:
      - "5102:8080"
    depends_on:
      - db
    networks: [qr-suite]

  kds-app:
    image: ayubov012/qr-kds:latest
    build:
      context: .
      dockerfile: KdsApp/Dockerfile
    container_name: qr-kds
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - AdminPublicBase=http://95.217.129.76:5101
    ports:
      - "5103:8080"
    depends_on:
      - db
    networks: [qr-suite]

  db:
    image: postgres:16
    container_name: qr-db
    environment:
      POSTGRES_DB: qrdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "$$amir001"
    ports:
      - "5434:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks: [qr-suite]

networks:
  qr-suite:

volumes:
  pg-data: